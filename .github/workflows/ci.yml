name: ci

on:
  push:
    branches: ["main"]
    tags: ["*"] # all tags
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: "ci-${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: Check formatting
        if: runner.os == 'Linux'
        run: cargo fmt --all -- --check

      - name: Build
        run: cargo build --verbose --all-targets --tests --examples --release

      - name: Lint
        if: runner.os == 'Linux'
        run: cargo clippy --all-targets --all-features --release -- -D warnings
      - name: Run tests
        run: cargo test --release

      - name: Zip up the release build (unix)
        if: runner.os != 'Windows' # && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          export TARGET_TUPLE=$( rustc -vV | sed -n 's|host: ||p' )
          echo "TARGET_TUPLE: $TARGET_TUPLE" >> $GITHUB_ENV
          zip -r mf2lsp-$TARGET_TUPLE.zip target/release/mf2lsp

      - name: Zip up the release build (windows)
        if: runner.os == 'Windows' # && github.event_name == 'push' && startsWith
        run: |
          export TARGET_TUPLE=$( rustc -vV | Select-String -Pattern 'host: ' )
          echo "TARGET_TUPLE: $TARGET_TUPLE" >> $GITHUB_ENV
          Compress-Archive -Path target/release/mf2lsp -DestinationPath mf2lsp-$TARGET_TUPLE.zip

      - name: Upload artifacts
        # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: mf2lsp-${{ env.TARGET_TUPLE }}
          path: mf2lsp-*.zip

      - name: GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: mf2lsp-*.zip

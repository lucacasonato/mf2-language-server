a{ 1e }
{ 1e+ }
{ 1e- }
=== spans ===
                    a{ 1e }↵{ 1e+ }↵{ 1e- }
SimpleMessage       ^^^^^^^^^^^^^^^^^^^^^^^
Text                ^
LiteralExpression    ^^^^^^
Number                 ^^
Number.integral        ^
Number.exponent          
Text                       ^
LiteralExpression           ^^^^^^^
Number                        ^^^
Number.integral               ^
Number.exponent                  
Text                               ^
LiteralExpression                   ^^^^^^^
Number                                ^^^
Number.integral                       ^
Number.exponent                          
=== diagnostics ===
[
    Number is missing an exponent part (at @3..5),
    Number is missing an exponent part (at @10..13),
    Number is missing an exponent part (at @18..21),
]
=== ast ===
SimpleMessage {
    parts: [
        Text {
            start: @0,
            content: "a",
        },
        LiteralExpression {
            open: @1,
            close: @6,
            literal: Number {
                start: @3,
                raw: "1e",
                is_negative: false,
                integral_len: 1,
                fractional_len: None,
                exponent_len: Some(
                    (
                        None,
                        0,
                    ),
                ),
            },
            annotation: None,
            attributes: [],
        },
        Text {
            start: @7,
            content: "\n",
        },
        LiteralExpression {
            open: @8,
            close: @14,
            literal: Number {
                start: @10,
                raw: "1e+",
                is_negative: false,
                integral_len: 1,
                fractional_len: None,
                exponent_len: Some(
                    (
                        Plus,
                        0,
                    ),
                ),
            },
            annotation: None,
            attributes: [],
        },
        Text {
            start: @15,
            content: "\n",
        },
        LiteralExpression {
            open: @16,
            close: @22,
            literal: Number {
                start: @18,
                raw: "1e-",
                is_negative: false,
                integral_len: 1,
                fractional_len: None,
                exponent_len: Some(
                    (
                        Minus,
                        0,
                    ),
                ),
            },
            annotation: None,
            attributes: [],
        },
    ],
}